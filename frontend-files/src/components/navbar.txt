import React, { useState } from "react";
import { NavLink } from "react-router-dom";

// react icons
import {
  FaBars,
  FaDribbble,
  FaMeta,
  FaTwitter,
  FaXmark,
} from "react-icons/fa6";
import Modal from "./Modal";

const Navbar = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [activeDropdown, setActiveDropdown] = useState(null);

  const toggleMenu = () => {
    setIsMenuOpen(!isMenuOpen);
  };

  const toggleDropdown = (dropdown) => {
    setActiveDropdown(activeDropdown === dropdown ? null : dropdown);
  };

  const navItems = [
    { path: "/", link: "Home" },
    { path: "/services", link: "Services" },
    { path: "/about", link: "About" },
    {
      path: "/seo",
      link: "Seo",
      dropdown: [
        { path: "/seo/link1", link: "Link 1" },
        { path: "/seo/link2", link: "Link 2" },
        { path: "/seo/link3", link: "Link 3" },
      ],
    },
    {
      path: "/ads",
      link: "Ads",
      dropdown: [
        { path: "/ads/ads1", link: "Ads 1" },
        { path: "/ads/ads2", link: "Ads 2" },
      ],
    },
    { path: "/blogs", link: "Blogs" },
    { path: "/contact", link: "Contact" },
  ];

  const [isModalOpen, setIsModalOpen] = useState(false);

  const openModal = () => {
    setIsModalOpen(true);
  };

  const closeModal = () => {
    setIsModalOpen(false);
  };

  return (
    <header className="fixed bg-black top-0 left-0 right-0 text-white">
      <nav className="px-4 max-w-7xl mx-auto flex justify-between items-center py-4">
        <a href="/" className="text-xl font-bold text-white">
          Design<span className="text-blue-500">DK</span>
        </a>

        {/* navitems */}
        <ul className="md:flex gap-12 text-lg hidden">
          {navItems.map(({ link, path, dropdown }) => (
            <li className="relative text-white" key={path}>
              {dropdown ? (
                <>
                  <button
                    onClick={() => toggleDropdown(link)}
                    className="focus:outline-none"
                  >
                    {link}
                  </button>
                  {activeDropdown === link && (
                    <ul className="absolute left-0 mt-2 w-40 bg-white text-black shadow-lg rounded">
                      {dropdown.map(({ link, path }) => (
                        <li key={path} className="p-2 hover:bg-gray-200">
                          <NavLink to={path} className="block w-full text-left">
                            {link}
                          </NavLink>
                        </li>
                      ))}
                    </ul>
                  )}
                </>
              ) : (
                <NavLink
                  to={path}
                  className={({ isActive, isPending }) =>
                    isActive ? "active" : isPending ? "pending" : ""
                  }
                >
                  {link}
                </NavLink>
              )}
            </li>
          ))}
        </ul>

        {/* menu icons for large devices */}
        <div className="text-white lg:flex gap-4 items-center hidden">
          <a href="/" className="hover:text-blue-500">
            <FaMeta />
          </a>
          <a href="/" className="hover:text-blue-500">
            <FaDribbble />
          </a>
          <a href="/" className="hover:text-blue-500">
            <FaTwitter />
          </a>
          <button
            onClick={openModal}
            className="bg-blue-500 px-6 py-2 font-medium rounded hover:bg-white hover:text-blue-500 transition-all ease-in duration-200 ml-4"
          >
            Log in
          </button>
        </div>

        {/* modal component */}
        <Modal isOpen={isModalOpen} onClose={closeModal} />

        {/* mobile menu */}
        <div className="md:hidden">
          <button onClick={toggleMenu} className="cursor-pointer">
            {isMenuOpen ? (
              <FaXmark className="w-5 h-5" />
            ) : (
              <FaBars className="w-5 h-5" />
            )}
          </button>
        </div>
      </nav>

      {/* mobile menu items only */}
      <div>
        <ul
          className={`md:hidden block space-y-4 px-4 py-6 mt-14 bg-white ${
            isMenuOpen
              ? "fixed top-0 left-0 w-full transition-all ease-out duration-150"
              : "hidden"
          }`}
        >
          {navItems.map(({ link, path, dropdown }) => (
            <li className="text-black" key={path}>
              {dropdown ? (
                <>
                  <button
                    onClick={() => toggleDropdown(link)}
                    className="w-full text-left focus:outline-none"
                  >
                    {link}
                  </button>
                  {activeDropdown === link && (
                    <ul className="pl-4 mt-2 bg-gray-100 rounded">
                      {dropdown.map(({ link, path }) => (
                        <li key={path} className="py-2">
                          <NavLink
                            to={path}
                            className="block w-full"
                            onClick={toggleMenu}
                          >
                            {link}
                          </NavLink>
                        </li>
                      ))}
                    </ul>
                  )}
                </>
              ) : (
                <NavLink
                  to={path}
                  className={({ isActive }) => (isActive ? "active" : "")}
                  onClick={toggleMenu}
                >
                  {link}
                </NavLink>
              )}
            </li>
          ))}
        </ul>
      </div>
    </header>
  );
};

</>